In today 's technology - centric world , even non - technical leaders should learn the basics of coding . If you are running a company that is heavily reliant on technology , I can tell you learning to code is hands - down one of the most valuable skills I have ever acquired . Even if you do n't plan on becoming a full - time developer , having an in - depth knowledge of the inner workings of software development will save your company time , money and resources . If you consistently find yourself hitting walls due to a lack of technical knowledge , I encourage you to learn how to code . In the long run , it will make your life that much easier . Here are my five tips if you want to learn to code : While websites such as Codecademy receive a lot of good press , I believe they miss the bigger picture . Online courses such as these will teach you syntax -- how to declare a variable -- but they ( in my opinion ) do not show you how everything works within the context of the entire application . I once finished a Ruby course on Codecademy , and by the end knew how to write an IF , THEN statement , but still had no idea how to actually build a web application and get that IF , THEN statement to run inside the application . Instead , I 'd recommend courses that focus on how to build entire function applications rather than learning specific languages . Sites such as One Month and Code4Startup can help you out in these areas . If you really want to get your hands dirty , Michael Hartl 's Ruby on Rails Tutorial will not only provide you with a strong foundation on how to build an application , but teach you basic programming fundamentals . It took me almost three months to get through the entire tutorial , but it was well worth the time invested . Learning to code is hard and there is no way around that . The initial learning curve is steep . The best way to learn is to run into issues and work through them -- do not cheat ! One of the drawbacks of a site like Codecademy is that if you ca n't work your way through a problem , you can just click to see the answer . While this may help you move onto the next step , you often wo n't understand what you did wrong . And if you do , you likely wo n't remember it . There is a precipitous learning curve in coding but I guarantee , if you stick with it long enough , there will come a point when it starts to click . Having the discipline to work through problems will force your mind to remember what you did wrong the next time you run into the same issue . For me , learning to code was similar to learning calculus . At first , I swore it was random madness and nothing made sense . But eventually , I started to realize there was a method to the madness , and moving forward , it made things much easier . Having a deep knowledge of how HTML , CSS and Javascript work will get you pretty far , even if you haven't yet learned any back - end languages such as PHP or Ruby . HTML and CSS are what are known as the " front end . " Technically , they are n't even development languages , but you can still accomplish a lot with them . Having this front end knowledge will equip you with the tools to build a prototype , stand up a website , or just play around with an idea you may have . I suggest learning Bootstrap , which is a front - end framework . Many people want to learn to code simply for the sake of learning to code -- avoid this . Having a personal project you want to complete will keep you motivated when you are so frustrated , you just want to jump off a cliff . It also provides a completion point and a medium to test and apply your new skills rather than just learning for sport . Like anything in life , this sounds like a given , but it 's true . If you 're frustrated , take a step back , do something else for a while , and come back to it . I can not tell you how many times I 've banged my head against the wall trying to figure out an issue , only to come back a few hours later and figure out the answer in minutes . It is always too early to give up . If you 're planning to have a career in the tech space , knowing how to code will work wonders in any capacity . Admittedly , learning to code is hard and there are no shortcuts , which is why there are not enough developers . But are there any shortcuts to places worth going ? Stick with it . It 'll be worth it -- I promise . Image : WOCinTech This article is courtesy of BusinessCollective , featuring thought leadership content by ambitious young entrepreneurs , executives & small business owners .